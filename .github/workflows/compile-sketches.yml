# This workflow compiles the sketches for one of each distinct type of active official Arduino board.
#
# This requires the use of external components (e.g., libraries, boards platform, toolchain), so it is possible for
# compilations to be broken by bugs in the external components, even though the example itself is perfect.
#
# If this happens, the procedure is:
# - Report the bug to the appropriate issue tracker.
# - Adjust this workflow to remove the compilation for the specific board/sketch combination that is failing due to the
#   bug.
# - Add a comment to the workflow providing the URL of the issue report.
# - Once the bug is fixed and the fix released, revert the commit that removed the failing compilation.
# - If the issue is closed as "wontfix", add a comment to the affected examples documenting the incompatibility and open
#   an issue requesting that the associated tutorials be updated.

name: Compile Sketches

on:
  pull_request:
    paths-ignore:
      - "**"
      - "!.github/workflows/compile-sketches.ya?ml"
        # - "GCA51/CustomLibs/LocoNet/examples/**"
        # - "GCA51/CustomLibs/rfid2ln/**"
      - "!GCA51/**"
      - "**.adoc"
      - "**.jpg"
      - "**.md"
      - "**.png"
      - "**.txt"
  push:
    paths-ignore:
      - "**"
      - "!.github/workflows/compile-sketches.ya?ml"
        # - "GCA51/CustomLibs/LocoNet/examples/**"
        # - "GCA51/CustomLibs/rfid2ln/**"
      - "!GCA51/**"
      - "**.adoc"
      - "**.jpg"
      - "**.md"
      - "**.png"
      - "**.txt"
  # Scheduled trigger checks for breakage caused by changes to external resources (libraries, platforms)
  schedule:
    # run every Tuesday at 3 AM UTC
    - cron: "0 3 * * 2"
  # workflow_dispatch event allows the workflow to be triggered manually
  # See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
  # repository_dispatch event allows the workflow to be triggered via the GitHub API
  # See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#repository_dispatch
  repository_dispatch:

jobs:
  build:
    name: ${{ matrix.board.fqbn }}
    runs-on: ubuntu-latest

    env:
      # Libraries to install for all boards
      UNIVERSAL_LIBRARIES: |
        - name: SPI.h

      # Sketch paths to compile (recursive) for all boards
      UNIVERSAL_SKETCH_PATHS: |
        - GCA51

    strategy:
      fail-fast: false

      matrix:
        board:
          # For testing the sketches
          - fqbn: arduino:avr:uno
            usb: false
            serial1: false
            starter-kit: true
            tone: true
            a5: true
          # Nano has 1.5 kB less available flash
          - fqbn: arduino:avr:nano
            usb: false
            serial1: false
            starter-kit: false
            tone: true
            a5: true

    steps:
      - name: Checkout GCA51
        uses: actions/checkout@v4

      - name: Checkout LocoNet custom library
        uses: actions/checkout@v4
        with:
          repository: mrrwa/LocoNet
          ref: master
          path: GCA51/CustomLibs/LocoNet # path must contain string "Custom"

      - name: Checkout rfid2ln custom library
        uses: actions/checkout@v4
        with:
          repository: lmmeng/rfid2ln
          ref: master
          path: GCA51/CustomLibs/rfid2ln # path must contain string "Custom"

      - name: Checkout MFRC522 custom library
        uses: actions/checkout@v4
        with:
          repository: miguelbalboa/rfid
          ref: master
          path: GCA51/CustomLibs/MFRC522 # path must contain string "Custom"

      - name: Install repo as library
        run: |
          mkdir -p "$HOME/Arduino/libraries"
          ln -s "$PWD/GCA51/CustomLibs/" "$HOME/Arduino/libraries/."

      - name: Install repos as copies
        run: |
          cp "$PWD/GCA51/CustomLibs/LocoNet/LocoNet.h" "$PWD/GCA51/"
          cp -R "$PWD/GCA51/CustomLibs/LocoNet/utility/" "$PWD/GCA51/"
          cp "$PWD/GCA51/CustomLibs/rfid2ln/rfid2ln.h" "$PWD/GCA51/"
          cp "$PWD/GCA51/CustomLibs/rfid2ln/rfid2lnFunc.cpp" "$PWD/GCA51/"

          ls -l "$PWD/GCA51/"
          ls -l "$PWD/GCA51/utility/"

      - name: Compile sketches
        uses: arduino/compile-sketches@v1
        with:
          fqbn: ${{ matrix.board.fqbn }}
          libraries: |
            ${{ env.UNIVERSAL_LIBRARIES }}
            ${{ matrix.usb-libraries }}
            - source-url: https://github.com/miguelbalboa/rfid.git
            - source-url: https://github.com/lmmeng/rfid2ln.git
            - source-url: https://github.com/mrrwa/LocoNet.git
          sketch-paths: |
            ${{ env.UNIVERSAL_SKETCH_PATHS }}
